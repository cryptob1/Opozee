@model PagedList.IPagedList<Opozee.Models.API.PostQuestionDetail>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Posted Questions</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Questions", FormMethod.Get))
{
    <div class="input-group">
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { htmlAttributes = new { @class = "form-control bg-light border-0 small", @placeholder = "Search for..." } })
        <div class="input-group-append">
            <button class="btn btn-primary" type="submit">
                <i class="fas fa-search fa-sm"></i>
            </button>
        </div>
    </div>
}
<br />
<div class="card shadow mb-4">
    @*<div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">DataTables Example</h6>
        </div>*@
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        @*<th>
                                @Html.DisplayNameFor(model => model.Question)
                            </th>*@
                        <th>
                            @Html.ActionLink("Question", "Index", new { userId = ViewBag.UserId, sortOrder = ViewBag.QuestionSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        @*<th>
                                @Html.DisplayNameFor(model => model.OwnerUserName)
                            </th>*@
                        <th>
                            @Html.ActionLink("UserName", "Index", new { userId = ViewBag.UserId, sortOrder = ViewBag.UserNameSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        @*<th>
                                @Html.DisplayNameFor(model => model.HashTags)
                            </th>*@
                        <th>
                            @Html.ActionLink("HashTags", "Index", new { userId = ViewBag.UserId, sortOrder = ViewBag.HashSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        @*<th>
                                @Html.DisplayNameFor(model => model.OwnerUserName)
                            </th>*@
                        @*<th>
                                @Html.DisplayNameFor(model => model.CreationDate)
                            </th>*@
                        <th>
                            @Html.ActionLink("CreationDate", "Index", new { userId = ViewBag.UserId, sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>

                        @*<th>
                                @Html.DisplayNameFor(model => model.ModifiedDate)
                            </th>*@
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Question)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OwnerUserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.HashTags)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreationDate)
                            </td>
                            @*<td>
                                    @Html.DisplayFor(modelItem => item.ModifiedDate)
                                </td>*@
                            <td>
                                @*@Html.ActionLink("Edit", "Edit", new { id = item.Id })*@
                                <a href="@Url.Action("Edit/"+item.Id )"><i class="fa fa-pencil" aria-hidden="true"></i></a> |
                                @*@Html.ActionLink("Details", "Details", new { id = item.Id })*@
                                <a href="@Url.Action("Details/"+item.Id )"><i class="fa fa-eye" aria-hidden="true"></i></a>|
                                @*@Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
                                <a href="@Url.Action("DeleteConfirmed/"+item.Id )" class="delete-link"><i class="fa fa-trash" aria-hidden="true"></i></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>

            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>


<div id="delete-dialog" title="Confirmation" style="display:none;">
    <p>Are you sure you want to delete this Question?</p>
</div>
